spring:
  #redis配置
#  redis:
#    host: 127.0.0.1
#    port: 6379
#    password: essm123456
#    database: 0

  #数据源配置
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/dept_dev?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false
    username: dept_dev
    password: dept123456
    type: com.alibaba.druid.pool.DruidDataSource
    #2.0之后直接在这里配置数据库监控用户名密码。但是要加druid节点，上面
    druid:
      initialSize: 8
      minIdle: 8
      maxActive: 500
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 30000
      maxEvictableIdleTimeMillis: 60000
      validationQuery: SELECT 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      #filters: #配置多个英文逗号分隔(统计，sql注入，log4j过滤)
      filters: stat,wall,slf4j
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: true
        login-username: druid
        login-password: druid123

#mybatis配置
mybatis:
  mapperLocations: classpath*:mapper/**/*.xml
  typeAliasesPackage: com.xue.springcloud

#配置注册到注册中心
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8500/eureka/

#开启熔断
feign:
  hystrix:
    enabled: true

#SpringCloud feign 默认开启支持ribbon
ribbon:
  ConnectTimeout: 2000 #请求连接超时时间
  ReadTimeout: 5000 #请求处理超时时间
  MaxAutoRetries: 1 #对当前实例的重试次数，最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetriesNextServer: 2 #切换实例的重试次数
  okToRetryOnAllOperations: false #对所有的操作请求都进行重试，如果是get则可以，如果是post,put等操作没有实现幂等的情况下是很危险的

#配置请求超时时间(尽量大于(1+MaxAutoRetries+MaxAutoRetriesNextServer)*ReadTimeout) (1+1+2)*5000
#(ReadTimeout+（MaxAutoRetries * ReadTimeout）) * (MaxAutoRetriesNextServer + 1)=(5000+(1*5000))*3=30000
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 32000 #默认1s
    #配置具体方法超时时间
    serverMethod:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000
